{"ast":null,"code":"var _jsxFileName = \"D:\\\\umair study\\\\VS code\\\\React\\\\action\\\\src\\\\Digital.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nlet Digital = () => {\n  _s();\n\n  let time = new Date().toLocaleTimeString();\n  let state = useState();\n  let [ctime, setState] = useState();\n\n  let update = () => {\n    let updateTime = new Date().toLocaleTimeString();\n    setState(updateTime);\n  };\n\n  setInterval(() => {\n    update();\n  }, 1000);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" The Current time is : \", ctime, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n};\n\n_s(Digital, \"4Ci/SvkR9SImmw7BDQLRzDfXITI=\");\n\n_c = Digital;\nexport default Digital;\n\nvar _c;\n\n$RefreshReg$(_c, \"Digital\");","map":{"version":3,"sources":["D:/umair study/VS code/React/action/src/Digital.jsx"],"names":["React","useState","Digital","time","Date","toLocaleTimeString","state","ctime","setState","update","updateTime","setInterval"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;AAMA,IAAIC,OAAO,GAAG,MAAK;AAAA;;AAEf,MAAIC,IAAI,GAAG,IAAIC,IAAJ,GAAWC,kBAAX,EAAX;AAEA,MAAIC,KAAK,GAAGL,QAAQ,EAApB;AAEA,MAAI,CAACM,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,EAAhC;;AAEA,MAAIQ,MAAM,GAAG,MAAI;AACb,QAAIC,UAAU,GAAG,IAAIN,IAAJ,GAAWC,kBAAX,EAAjB;AACAG,IAAAA,QAAQ,CAACE,UAAD,CAAR;AACH,GAHD;;AAKAC,EAAAA,WAAW,CAAC,MAAM;AACdF,IAAAA,MAAM;AACT,GAFU,EAER,IAFQ,CAAX;AAIA,sBACI;AAAA,2BACE;AAAA,4CAA4BF,KAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,mBADJ;AAKH,CAtBD;;GAAIL,O;;KAAAA,O;AAyBJ,eAAeA,OAAf","sourcesContent":["import React, { useState } from \"react\";\r\n\r\n\r\n\r\n\r\n\r\nlet Digital = ()=> {\r\n\r\n    let time = new Date().toLocaleTimeString();\r\n\r\n    let state = useState();\r\n\r\n    let [ctime, setState] = useState();\r\n\r\n    let update = ()=>{\r\n        let updateTime = new Date().toLocaleTimeString();\r\n        setState(updateTime);\r\n    }\r\n\r\n    setInterval(() => {\r\n        update();\r\n    }, 1000);\r\n\r\n    return(\r\n        <>\r\n          <h2> The Current time is : {ctime} </h2> \r\n        </>\r\n    );\r\n}\r\n\r\n\r\nexport default Digital; "]},"metadata":{},"sourceType":"module"}